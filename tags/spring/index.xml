<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Spring - Tag - Z</title>
        <link>http://lei-zz.github.io/tags/spring/</link>
        <description>Spring - Tag - Z</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>lei.zz0309@gmail.com (lei.zz)</managingEditor>
            <webMaster>lei.zz0309@gmail.com (lei.zz)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 17 Jul 2020 22:00:00 &#43;0000</lastBuildDate><atom:link href="http://lei-zz.github.io/tags/spring/" rel="self" type="application/rss+xml" /><item>
    <title>Spring详解</title>
    <link>http://lei-zz.github.io/spring/</link>
    <pubDate>Fri, 17 Jul 2020 22:00:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://lei-zz.github.io/spring/</guid>
    <description><![CDATA[Spring 概述 简介  Spring 是分层的 full-stack(全栈) 轻量级开源框架，以 IoC 和 AOP 为内核，提供了展现层 Spring MVC 和业务层事务管理等众多的企业级应用技术，还能整合开源世界众多著名的第三方框架和类库，已 经成为使用最多的 Java EE 企业应用开源框架。  优势   方便解耦，简化开发
 通过Spring提供的IoC容器，可以将对象间的依赖关系交由Spring进行控制，避免硬编码所造成的 过度程序耦合。用户也不必再为单例模式类、属性文件解析等这些很底层的需求编写代码，可以更 专注于上层的应用。    AOP编程的支持
 通过Spring的AOP功能，方便进行面向切面的编程，许多不容易用传统OOP实现的功能可以通过AOP轻松应付。    声明式事务的支持 @Transactional
 可以将我们从单调烦闷的事务管理代码中解脱出来，通过声明式方式灵活的进行事务的管理，提高 开发效率和质量。    方便程序的测试
 可以用非容器依赖的编程方式进行几乎所有的测试工作，测试不再是昂贵的操作，而是随手可做的 事情。    方便集成各种优秀框架
 Spring可以降低各种框架的使用难度，提供了对各种优秀框架(Struts、Hibernate、Hessian、 Quartz等)的直接支持。    降低JavaEE API的使用难度
 Spring对JavaEE API(如JDBC、JavaMail、远程调用等)进行了薄薄的封装层，使这些API的使用难度大为降低。    源码是经典的 Java 学习范例]]></description>
</item></channel>
</rss>
